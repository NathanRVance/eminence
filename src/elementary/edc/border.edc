#define INACTIVE 1
#define ACTIVE 2
#define HOVER 4
#define PRESSED 8

   group {
      name: "e/border/btn-close";
      script {
         public btmode;
         public eval_mode(m) {
            new i = m & INACTIVE;
            new h = m & HOVER;
            new p = m & PRESSED;

            if (!p) {
               if (!h) {
                  if (!i) {
                     set_state(PART:"base", "active", 0.0);
                  } else {
                     set_state(PART:"base", "default", 0.0);
                  }
               } else {
                  set_state(PART:"base", "hover", 0.0);
               }
            } else {
               set_state(PART:"base", "pressed", 0.0);
            }
         }
      }
      IMAGE_SET("close-btn", BORDER_BTN_W, BORDER_BTN_H)
      parts {
         image { "base"; scale: 1;
            desc { "default";
               image.normal: "close-btn";
               color_class: "close-btn-inactive";
            }
            desc { "active";
               inherit: "default";
               color_class: "close-btn-active";
            }
            desc { "hover";
               inherit: "default";
               color_class: "close-btn-hover";
            }
            desc { "pressed";
               inherit: "default";
               color_class: "close-btn-pressed";
            }
         }
      }
      programs {
         program {
            signal: "mouse,in"; source: "base";
            script {
               new m = get_int(btmode);
               m |= HOVER; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,out"; source: "base";
            script {
               new m = get_int(btmode);
               m &= ~HOVER; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,down,*"; source: "base";
            script {
               new m = get_int(btmode);
               m |= PRESSED; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,up,*"; source: "base";
            script {
               new m = get_int(btmode);
               m &= ~PRESSED; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "e,state,focused"; source: "e";
            script {
               new m = get_int(btmode);
               m &= ~INACTIVE; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "e,state,unfocused"; source: "e";
            script {
               new m = get_int(btmode);
               m |= INACTIVE; set_int(btmode, m);
               eval_mode(m);
            }
         }
      }
   }

   group { name: "e/border/btn-minimize";

      script {
         public btmode;
         public eval_mode(m) {
            new i = m & INACTIVE;
            new h = m & HOVER;
            new p = m & PRESSED;

            if (!p) {
               if (!h) {
                  if (!i) {
                     set_state(PART:"base", "active", 0.0);
                     set_state(PART:"symbol", "active", 0.0);
                  } else {
                     set_state(PART:"base", "default", 0.0);
                     set_state(PART:"symbol", "default", 0.0);
                  }
               } else {
                  set_state(PART:"base", "hover", 0.0);
                  set_state(PART:"symbol", "hover", 0.0);
               }
            } else {
               set_state(PART:"base", "pressed", 0.0);
               set_state(PART:"symbol", "pressed", 0.0);
            }
         }
      }
      IMAGE_SET("minimize-dash", BORDER_BTN_W, BORDER_BTN_H)
      parts {
         image { "base"; scale: 1;
            desc { "default";
               min: (BORDER_BTN_W * 1.25) (BORDER_BTN_H * 1.25);
               max: (BORDER_BTN_W * 1.25) (BORDER_BTN_H * 1.25);
               color: 0 0 0 0;
            }
         }
         image { "symbol"; nomouse;
            desc { "default";
               image.normal: "minimize-dash";
               rel.to: "base";
               color_class: "minimize-inactive";
            }
            desc { "active";
               inherit: "default";
               color_class: "minimize-active";
            }
            desc { "hover";
               inherit: "default";
               color_class: "minimize-hover";
            }
            desc { "pressed";
               inherit: "default";
               color_class: "minimize-pressed";
            }
         }
      }
      programs {
         program {
            signal: "mouse,in"; source: "base";
            script {
               new m = get_int(btmode);
               m |= HOVER; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,out"; source: "base";
            script {
               new m = get_int(btmode);
               m &= ~HOVER; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,down,*"; source: "base";
            script {
               new m = get_int(btmode);
               m |= PRESSED; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "mouse,up,*"; source: "base";
            script {
               new m = get_int(btmode);
               m &= ~PRESSED; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "e,state,focused"; source: "e";
            script {
               new m = get_int(btmode);
               m &= ~INACTIVE; set_int(btmode, m);
               eval_mode(m);
            }
         }
         program {
            signal: "e,state,unfocused"; source: "e";
            script {
               new m = get_int(btmode);
               m |= INACTIVE; set_int(btmode, m);
               eval_mode(m);
            }
         }
      }
   }
   group { name: "e/border/btn-maximize";
      inherit: "e/border/btn-minimize";
      IMAGE_SET("maximize-sym", BORDER_BTN_W, BORDER_BTN_H)
      parts {
         image { "symbol"; nomouse;
            desc { "default";
               image.normal: "maximize-sym";
               min: (BORDER_BTN_W * 1.25) (BORDER_BTN_H * 1.25);
               max: (BORDER_BTN_W * 1.25) (BORDER_BTN_H * 1.25);
               color_class: "maximize-inactive";
            }
            desc { "active";
               inherit: "default";
               color_class: "maximize-active";
            }
            desc { "hover";
               inherit: "default";
               color_class: "maximize-hover";
            }
            desc { "pressed";
               inherit: "default";
               color_class: "maximize-pressed";
            }
         }
      }
   }
#undef HOVER
#undef ACTIVE
#undef INACTIVE
#undef PRESSED

#undef HOVER
#undef ACTIVE
#undef INACTIVE
#undef PRESSED


group {
   name: "e/widgets/border/default/border";
   alias: "e/widgets/border/shaped/border";
   images {
      image: "bg-top-rounded-3px@4.png" COMP;
      image: "border-top-rounded-3px.png" COMP;
      image: "border-top-rounded-3px@4.png" COMP;
      // enlightenment's window shadow
      image: "win_shadow.png" COMP;
   }

   data.item: "shadow" "1";
   parts {
      part { name: "shadow_clip";
         type: RECT;
         mouse_events: 0;
         description { state: "default";
            rel1.to: "shadow";
            rel2.to: "shadow";
         }
         description { state: "hidden";
            visible: 0;
         }
      }
      part { name: "shadow";
         mouse_events: 0;
         clip_to: "shadow_clip";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.to: "top_bg";
            rel1.offset: -7 -3;
            rel2.to: "bottom";
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
         description { state: "shaded";
            inherit: "default";
            rel2.to: "e.swallow.client";
         }
      }
      image { name: "top_bg"; nomouse;
         scale: 1;
         desc { "default";
            image.normal: "bg-top-rounded-3px@4.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
            image.border_scale_by: 0.25;
            image.middle: SOLID;
            rel2.to_y: "e.text.title";
            rel2.relative: 1.0 1.0;
            color_class: "win_border_base";
            fill.smooth: 0;
         }
      }
      spacer { name: "border_shadow_spacer"; nomouse;
         scale: 1;
         desc { "default";
            min: BORDER_WIDTH BORDER_WIDTH;
            max: BORDER_WIDTH BORDER_WIDTH;
            align: 1.0 0.0;
         }
      }
      image { name: "top_border_shadow"; nomouse;
         scale: 1;
         desc { "default";
            image.border: 10 10 10 10;
            image.border_scale: 1;
            image.border_scale_by: 0.25;
            image.normal: "border-top-rounded-3px@4.png";
            image.middle: 0;
            rel1.to_y: "border_shadow_spacer";
            rel1.relative: 0.0 1.0;
            rel2.to: "top_bg";
            color_class: "win_border_border_shadow";
         }
      }
      image { name: "top_border"; nomouse;
         scale: 1;
         desc { "default";
            image.normal: "border-top-rounded-3px@4.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
            image.border_scale_by: 0.25;
            image.middle: 0;
            rel2.to: "top_bg";
            color_class: "win_border_border";
         }
      }
      rect { name: "top_bg_maximized"; nomouse;
         desc { "default";
            rel2.to: "top_bg";
            color_class: "win_border_base";
            visible: 0;
         }
         desc { "max";
            inherit: "default";
            visible: 1;
         }
      }
      part { name: "e.text.title";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to: "e.event.minimize";
               relative: 1.0 0.0;
               offset: 25 4;
            }
            rel2 {
               to: "e.event.icon";
               relative: 0.0 0.0;
               offset: -5 4;
            }
            color_class: "win_border_title";
            align: 0.5 0.0;
            min: 0 18;
            text {
               font: FN; size: 10;
               text_class: "title_bar";
               align: 0.5 0.0;
               text: " ";
            }
            fixed: 0 1;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color_class: "win_border_title_active";
         }
      }
      part { name: "e.event.titlebar";
         type: RECT;
         description { state: "default" 0.0;
            rel.to: "e.text.title";
            color: 0 0 0 0;
         }
      }
      group { name: "e.event.close";
         source: "e/border/btn-close";
         desc { "default";
            fixed: 1 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_y: "top_bg";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            map {
                on: 1;
                rotation.z: 0;
                perspective_on: 1;
            }
         }
         desc {
            state: "rotated" 0.0;
            inherit: "default" 0.0;
            map {
               rotation.z: 360;
            }
         }
      }
      group { name: "e.event.minimize";
         source: "e/border/btn-minimize";
         desc { "default";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 0;
            rel1.to_x: "e.event.close";
            rel2.relative: 1.0 1.0;
            rel2.to_y: "top_bg";
            rel2.to_x: "e.event.close";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            map {
                on: 1;
                rotation.z: 0;
                perspective_on: 1;
            }
         }
         desc {
            state: "rotated" 0.0;
            inherit: "default" 0.0;
            map {
               rotation.z: 360;
            }
         }
      }
      group { name: "e.event.maximize";
         source: "e/border/btn-maximize";
         desc { "default";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 0;
            rel1.to_x: "e.event.minimize";
            rel2.relative: 1.0 1.0;
            rel2.to_y: "top_bg";
            rel2.to_x: "e.event.close";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            map {
                on: 1;
                rotation.z: 0;
                perspective_on: 1;
            }
         }
         desc {
            state: "rotated" 0.0;
            inherit: "default" 0.0;
            map {
               rotation.z: 360;
            }
         }
      }
      part { name: "e.event.icon"; type: RECT;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            rel2.to_y: "top_bg";
            rel2.offset: -1 1;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "icon"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "e.event.icon";
            rel2.to: "e.event.icon";
         }
         description { state: "bounce1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
         }
         description { state: "bounce2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: -0.5 -0.5;
            rel2.relative: 1.2 1.2;
         }
      }
      part { name: "e.swallow.icon"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "icon";
            rel1.relative: 0.15 0.15;
            rel2.to: "icon";
            rel2.relative: 0.85 0.85;
            rel2.offset: 0 0;
         }
      }
      part { name: "bottom"; nomouse;
         type: RECT; scale: 1;
         description { state: "default" 0.0;
            color_class: "win_border_border";
            align: 0.0 1.0;
            max: 99999 BORDER_WIDTH;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            max: 99999 0;
         }
      }
      part { name: "left"; nomouse;
         type: RECT; scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_y: "top_bg";
               relative: 0.0 1.0;
            }
            rel2 {
               to_y: "bottom";
               relative: 1.0 0.0;
            }
            color_class: "win_border_border";
            align: 0.0 0.0;
            max: BORDER_WIDTH 99999;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "max";
            inherit: "default" 0.0;
            max: 0 99999;
         }
      }
      part { name: "right"; nomouse;
         type: RECT; scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_y: "top_bg";
               relative: 0.0 1.0;
            }
            rel2 {
               to_y: "bottom";
               relative: 1.0 0.0;
            }
            color_class: "win_border_border";
            align: 1.0 0.0;
            max: BORDER_WIDTH 99999;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "max";
            inherit: "default" 0.0;
            max: 0 99999;
         }
      }
      part { name: "client_clip";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to_y: "e.swallow.client";
            rel2.to_y: "e.swallow.client";
         }
         description { state: "hidden" 0.0;
            inherit: "default";
            visible: 0;
         }
      }
      part { name: "e.swallow.client";
         type: SWALLOW;
         clip_to: "client_clip";
         description { state: "default" 0.0;
            rel1 {
               relative: 1.0 1.0;
               to_x: "left";
               to_y: "top_bg";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "right";
               to_y: "bottom";
            }
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
         }
      }

      part { name: "e.event.resize.tl"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 2 2;
            rel2.relative: 0.0 0.0;
            min: 32 4;
            fixed: 1 1;
            align: 0.0 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "e.event.resize.t"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.event.resize.tl";
            rel2.relative: 0.0 0.0;
            rel2.to_x: "e.event.resize.tr";
            min: 0 4;
            align: 0.5 0.0;
            color: 0 0 0 0;
            fixed: 0 1;
         }
      }
      part { name: "e.event.resize.tr"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 2 2;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 0.0;
            min: 32 4;
            fixed: 1 1;
            align: 1.0 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "e.event.resize.bl"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.swallow.client";
            rel1.offset: -2 -3;
            rel2.offset: 2 2;
            rel2.relative: 0.0 1.0;
            min: 32 5;
            align: 0.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.b"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel1.to_x: "e.event.resize.tl";
            rel1.to_y: "e.swallow.client";
            rel1.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.event.resize.tr";
            min: 0 5;
            align: 0.5 1.0;
            color: 0 0 0 0;
            fixed: 0 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.br"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel1.to_y: "e.swallow.client";
            rel1.offset: -2 -3;
            rel2.offset: 2 2;
            rel2.relative: 1.0 1.0;
            min: 32 5;
            align: 1.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "e,state,shadow,on";
         source: "e";
         action: STATE_SET "default" 0.0;
         target: "shadow_clip";
      }
      program {
         signal: "e,state,shadow,off";
         source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "shadow_clip";
      }
      program {
         signal: "e,state,shaded";
         source: "e";
         action: STATE_SET "shaded" 0.0;
         target: "shadow";
         target: "e.text.title";
      }
      program {
         signal: "e,state,unshaded";
         source: "e";
         action: STATE_SET "unshaded" 0.0;
         target: "shadow";
         target: "e.text.title";
      }
      program {
         signal: "e,state,focused";
         source: "e";
         action: STATE_SET "active" 0.0;
         target: "e.text.title";
      }
      program {
         signal: "e,state,unfocused";
         source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.text.title";
      }
      program {
         signal: "e,state,urgent"; source: "e";
         action: STATE_SET "bounce1" 0.0;
         target: "icon";
         after: "urg1";
      }
      program { name: "urg1";
         action: STATE_SET "bounce2" 0.0;
         transition: DECELERATE 0.4;
         target: "icon";
         after: "urg2";
      }
      program { name: "urg2";
         action: STATE_SET "bounce1" 0.0;
         transition: ACCELERATE 0.3;
         target: "icon";
         after: "urg1";
      }
      program {
         signal: "e,state,not_urgent"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "icon";
      }
      program {
         signal: "e,action,maximize*"; source: "e";
         action: STATE_SET "max" 0.0;
         target: "e.swallow.client";
         target: "bottom";
         target: "left";
         target: "right";
         target: "top_bg_maximized";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }

      program {
         signal: "e,action,unmaximize*"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.client";
         target: "bottom";
         target: "left";
         target: "right";
         target: "top_bg_maximized";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      program {
         signal: "mouse,clicked,*";
         source: "e.event.minimize";
         action: SIGNAL_EMIT "elm,action,iconify" "elm";
      }
      program {
          name: "rotate-start-close";
          signal: "mouse,in";
          source: "e.event.close";
          action: STATE_SET "rotated" 0.0;
          transition: LINEAR 0.75;
          target: "e.event.close";
          after: "rotate-loop-close";
      }
      program {
          name: "rotate-loop-close";
          action: STATE_SET "default" 0.0;
          target: "e.event.close";
          after: "rotate-start-close";
      }
      program {
          name: "rotate-end-close";
          signal: "mouse,out";
          source: "e.event.close";
          action: STATE_SET "default" 0.0;
          target: "e.event.close";
      }
      program {
          name: "rotate-start-max";
          signal: "mouse,in";
          source: "e.event.maximize";
          action: STATE_SET "rotated" 0.0;
          transition: LINEAR 0.5;
          target: "e.event.maximize";
          after: "rotate-loop-max";
      }
      program {
          name: "rotate-loop-max";
          action: STATE_SET "default" 0.0;
          target: "e.event.maximize";
          after: "rotate-start-max";
      }
      program {
          name: "rotate-end-max";
          signal: "mouse,out";
          source: "e.event.maximize";
          action: STATE_SET "default" 0.0;
          target: "e.event.maximize";
      }
      program {
          name: "rotate-start-min";
          signal: "mouse,in";
          source: "e.event.minimize";
          action: STATE_SET "rotated" 0.0;
          transition: LINEAR 0.5;
          target: "e.event.minimize";
          after: "rotate-loop-min";
      }
      program {
          name: "rotate-loop-min";
          action: STATE_SET "default" 0.0;
          target: "e.event.minimize";
          after: "rotate-start-min";
      }
      program {
          name: "rotate-end-min";
          signal: "mouse,out";
          source: "e.event.minimize";
          action: STATE_SET "default" 0.0;
          target: "e.event.minimize";
          after: "rotate-end-min";
      }
   }
}

group { name: "e/widgets/border/dialog/border";
   alias: "e/widgets/border/modal/border";
   inherit: "e/widgets/border/default/border";
   parts {
      part { name: "e.event.titlebar";
         description { state: "default" 0.0;
            rel2.to_x: "e.event.close";
         }
      }
      part { name: "e.event.close";
         desc { "default";
            fixed: 1 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_y: "top_bg";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
         }
      }
      part { name: "e.event.maximize";
         description { state: "default" 0.0;
            max: 0 0;
            aspect: 0.0 0.0;
            visible: 0;
            fixed: 1 1;
         }
      }
      part { name: "e.event.minimize";
         description { state: "default" 0.0;
            max: 0 0;
            aspect: 0.0 0.0;
            visible: 0;
            fixed: 1 1;
         }
      }
   }
}

group { name: "e/widgets/border/noresize/border";
   inherit: "e/widgets/border/default/border";
   parts {
      part { name: "e.event.resize.bl";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.b";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.br";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
   }
}

group { name: "e/widgets/border/noresize_dialog/border";
   inherit: "e/widgets/border/default/border";
   parts {
      part { name: "e.event.resize.bl";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.b";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.br";
         description { state: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.close";
         desc { "default";
            fixed: 1 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_y: "top_bg";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
         }
      }
      part { name: "e.event.maximize";
         description { state: "default" 0.0;
            max: 0 0;
            visible: 0;
            fixed: 1 1;
         }
      }
      part { name: "e.event.minimize";
         description { state: "default" 0.0;
            max: 0 0;
            visible: 0;
            fixed: 1 1;
         }
      }
   }
}
group { name: "e/widgets/border/default/move";
   images.image: "bg-rounded-3px@4.png" COMP;
   images.image: "border-rounded-3px@4.png" COMP;
   images.image: "ic_win_move.png" COMP;
   parts {
      image { "bg"; scale: 1;
         desc { "default";
            image.normal: "bg-rounded-3px@4.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
            image.border_scale_by: 0.25;
            image.middle: 1;
            fill.smooth: 0;
            color_class: "popup_bg";

         }
      }
      image { "border"; scale: 1;
         desc { "default";
            image.normal: "border-rounded-3px@4.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
            image.border_scale_by: 0.25;
            image.middle: 0;
            rel.to: "bg";
            color_class: "popup_border";
         }
      }
      part { name: "icon"; scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            FIXED_SIZE(21, 21)
            rel1.offset: 2 2;
            rel2.relative: 0.0 1.0;
            rel2.offset: 2 -3;
            image.normal: "ic_win_move.png";
         }
      }
      part { name: "e.text.label"; type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "icon";
            rel1.offset: 4 4;
            rel1.relative: 1.0 0.0;
            rel2.offset: -5 -5;
            color_class: "move_text";
            text { font: FN; size: 10;
               min: 1 1;
               ellipsis: -1;
               text_class: "move_text";
            }
         }
      }
   }
}

group { name: "e/widgets/border/default/resize";
   inherit: "e/widgets/border/default/move";
   images.image: "ic_win_resize.png" COMP;
   parts {
      part { name: "icon";
         description { state: "default" 0.0;
            image.normal: "ic_win_resize.png";
         }
      }
      part { name: "e.text.label"; type: TEXT;
         description { state: "default" 0.0;
            color_class: "resize_text";
         }
      }
   }
}
