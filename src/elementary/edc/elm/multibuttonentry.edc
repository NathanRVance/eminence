group { "elm/multibuttonentry/base/default";
   data.item: "horizontal_pad" 0;
   data.item: "vertical_pad" 0;
   data.item: "closed_height" 0;
   parts {
      rect { "bg";
         scale: 1;
         desc { state: "default" 0.0;
            color_class: "multibuttonentry_bg";
         }
      }
      swallow { "elm.swallow.background";
         scale: 1;
         desc { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      swallow { "box.swallow";
         desc { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
   }
}

group { "elm/multibuttonentry/label/default";
   parts {
      text { "elm.text";
         mouse_events: 0;
         effect: GLOW;
         scale: 1;
         desc { state: "default" 0.0;
            color: FN_COL_HIGHLIGHT;
            color_class: "multibuttonentry_label";
            text { font: FNBD; size: FS;
               min: 1 1;
               ellipsis: -1;
               align: 0.5 0.5;
               text_class: "multibuttonentry_label";
            }
            rel1.offset: 2 2;
            rel2.offset: -5 -5;
         }
      }
   }
}

group { "elm/multibuttonentry/guidetext/default";
   parts {
      text { "elm.text";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { state: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: -4 -4;
            color: COL_FONT_BASIC_DISABLED;
            text { font: FNBD; size: FS;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
      }
   }
}

group { "elm/multibuttonentry/btn/default";
   images.image: "bg-rounded-3px@4.png" COMP;
   images.image: "border-rounded-3px@4.png" COMP;
   images.image: "button_focus.png" COMP;
   images.image: "toggle-sym-disabled.png" COMP;
   images.image: "win_glow.png" COMP;
   styles {
      style { "multibuttonentry_textblock_style";
         base: "font="FN" align=0.5 font_size="FS" color=#ffffffff style=shadow,bottom shadow_color=#00000080 text_class=multibuttonentry_item ellipsis=1.0";
         tag: "br" "\n";
         tag: "ps" "ps";
         tag: "hilight" "+ font="FNBD;
         tag: "b" "+ font="FNBD;
         tag: "tab" "\t";
      }
   }

   script {
      public disabled = 0;
   }

   parts {
      rect { "bg";
         desc { state: "default" 0.0;
            color_class: "multibuttonentry_item_bg";
         }
         desc { state: "pressed" 0.0;
            color_class: "multibuttonentry_item_bg_selected";
         }
      }
      image { "base"; scale: 1;
         desc { state: "default";
            image.normal: "bg-rounded-3px@4.png";
            image.border: 12 12 12 12;
            image.border_scale_by: 0.25;
            image.border_scale: 1;
            image.middle: SOLID;
            rel1.offset: 4 3;
            rel2.offset: -5 -4;
            fill.smooth: 0;
            color_class: "button_bg";
         }
         desc { state: "clicked";
            inherit: "default" ;
            color_class: "button_bg_pressed";
         }
         desc { state: "pressed";
            inherit: "default" ;
            color_class: "button_bg_pressed";
         }
         desc { state: "hover";
            inherit: "default";
            color_class: "button_bg_hover";
         }
         desc { state: "disabled";
            inherit: "default";
            color_class: "button_bg_disabled";
         }
         desc { state: "hidden";
            inherit: "default";
            visible: 0;
         }
      }
      image { "border"; scale: 1;
         desc { state: "default" 0.0;
            image.normal: "border-rounded-3px@4.png";
            image.border: 12 12 12 12;
            image.border_scale_by: 0.25;
            image.border_scale: 1;
            image.middle: 0;
            rel.to: "base";
            color_class: "button_border";
         }
      }
      image { "outline"; mouse_events: 0;
         desc { state: "default" 0.0;
            visible: 0;
            image.normal: "border-rounded-3px@4.png";
            image.border: 12 12 12 12;
            image.border_scale_by: 0.25;
            image.border_scale: 1;
            image.middle: 0;
            color_class: "focus_inline";
            rel1.to: "base";
            rel1.offset: 3 3;
            rel2.to: "base";
            rel2.offset: -4 -4;
         }
         desc { state: "focused";
            inherit: "default" 0.0;
            visible: 1;
         }
         desc { state: "unfocused";
            inherit: "default" 0.0;
         }
      }
      image { "glow"; mouse_events: 0;
         desc { state: "default" 0.0;
            image.normal: "win_glow.png";
            image.border: 9 9 9 9;
            image.middle: 0;
            rel1.offset: -2  -3;
            rel1.to: "base";
            rel2.offset: 1 0;
            rel2.to: "base";
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         desc { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
         desc { state: "unfocused" 0.0;
            inherit: "default" 0.0;
         }
      }
      image { "close";
         mouse_events: 0;
         scale: 1;
         desc { state: "default" 0.0;
            image.normal: "toggle-sym-disabled.png";
            rel1.to: "del";
            rel2.to: "del";
            min: 26 26;
            max: 26 26;
            fixed: 1 1;
            color_class: "multibuttonentry_item_close";
         }
         desc { state: "clicked" 0.0;
            inherit: "default" 0.0;
         }
      }
      rect { "del";
         scale: 1;
         desc { state: "default" 0.0;
            fixed: 1 1;
            min: 26 26;
            max: 26 26;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel1.to: "base";
            rel1.offset: -6 5;
            rel2.offset: -2 -7;
            rel2.to: "base";
            color: 0 0 0 0;
         }
      }
      textblock { "elm.btn.text";
         mouse_events: 0;
         scale: 1;
         desc { state: "default" 0.0;
            color_class: "multibuttonentry_item_text";
            text { style: "multibuttonentry_textblock_style";
               min: 1 1;
               ellipsis: -1;
               text_class: "multibuttonentry_item_text";
            }
            visible: 0;
            rel1.offset: 5 5;
            rel1.to: "base";
            rel2.to_x: "del";
            rel2.to_y: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: -3 -7;
         }
      }
      textblock { "text";
         mouse_events: 0;
         scale: 1;
         desc { state: "default" 0.0;
            color_class: "multibuttonentry_item_text";
            text { style: "multibuttonentry_textblock_style";
               text_source: "elm.btn.text";
               min: 0 1;
               align: 0.0 0.5;
               text_class: "multibuttonentry_item_text";
            }
            align: 0.0 0.5;
            rel1.offset: 5 5;
            rel1.to: "base";
            rel2.to_x: "del";
            rel2.to_y: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: -3 -7;
         }
         desc { state: "pressed" 0.0;
            inherit: "default";
            color_class: "multibuttonentry_item_text_pressed";
            text {
               text_class: "multibuttonentry_item_text_pressed";
            }
         }
         desc { state: "disabled" 0.0;
            inherit: "default";
            color_class: "multibuttonentry_item_text_disabled";
            text {
               text_class: "multibuttonentry_item_text_disabled";
            }
         }
      }
   }
   programs {
      program {
         signal: "mouse,in"; source: "base";
         action: STATE_SET "hover";
         target: "base";
         transition: SINUSOIDAL 0.2;
      }
      program {
         signal: "mouse,out"; source: "base";
         action: STATE_SET "default";
         target: "base";
         transition: SINUSOIDAL 0.2;
      }
      program {
         signal: "mouse,clicked,1"; source: "base";
         script {
            if (get_int(disabled) == 0) {
               emit("clicked", "");
               set_state(PART:"base", "clicked", 0.0);
            }
         }
      }
      program {
         signal: "elm,state,default"; source: "base";
         action: STATE_SET "default" 0.0;
         target: "glow";
         target: "outline";
      }
      program {
         signal: "elm,state,focused"; source: "base";
         action: STATE_SET "focused" 0.0;
         target: "glow";
         target: "outline";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         script {
            set_state(PART:"text", "default", 0.0);
            set_int(disabled , 0);
         }
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            get_state(PART:"glow", st, 30, vl);
            if (!strcmp(st, "focused"))
              set_state(PART:"glow", "default", 0.0);
            set_state(PART:"text", "disabled", 0.0);
            set_int(disabled , 1);
         }
      }
      program {
         signal: "elm,state,unfocused"; source: "base";
         action: STATE_SET "unfocused" 0.0;
         target: "glow";
         target: "outline";
      }
      program {
         signal: "mouse,down,1"; source: "base";
         script {
            if (get_int(disabled) == 0) {
               set_state(PART:"base", "pressed", 0.0);
               set_state(PART:"bg", "pressed", 0.0);
               set_state(PART:"text", "pressed", 0.0);
            }
         }
      }
      program {
         signal: "mouse,up,1"; source: "base";
         script {
            if (get_int(disabled) == 0) {
               set_state(PART:"base", "default", 0.0);
               set_state(PART:"bg", "default", 0.0);
               set_state(PART:"text", "default", 0.0);
            }
         }
      }
      program {
         signal: "mouse,clicked,1"; source: "del";
         action: SIGNAL_EMIT "elm,deleted" "elm";
      }
      program {
         signal: "mouse,down,1"; source: "del";
         action: STATE_SET "clicked" 0.0;
         target: "close";
      }
      program {
         signal: "mouse,up,1"; source: "del";
         action: STATE_SET "default" 0.0;
         target: "close";
      }
   }
}

group { "elm/multibuttonentry/closedbutton/default";
   styles {
      style { "textblock_style_multibuttonentry_default";
         base: "font="FNBD" font_size="FS" text_class=multibuttonentry_closed style=glow color=#966edcff glow_color=#966edc18 align=center glow2_color=#966edc12 wrap=char";
         tag: "br" "\n";
         tag: "ps" "ps";
         tag: "hilight" "+ font="FNBD;
         tag: "b" "+ font="FNBD;
         tag: "tab" "\t";
      }
   }
   parts {
      rect { "bg";
         desc { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      textblock { "elm.text";
         mouse_events: 0;
         scale: 1;
         desc { state: "default" 0.0;
            rel1.offset: 2 2;
            rel1.to: "bg";
            rel2.offset: -3 -3;
            rel2.to: "bg";
            text { style: "textblock_style_multibuttonentry_default";
               min: 1 1;
               ellipsis: -1;
            }
         }
      }
   }
}
